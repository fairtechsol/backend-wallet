syntax = "proto3";

package grpc.betsProvider;

message GetBetsRequest {
  string query = 1; 
}

message GetBetsResponse {
  string data = 1; 
}

message GetSessionProfitLossUserWiseRequest {
  string betId = 1; 
}

message GetSessionProfitLossUserWiseResponse {
  string data = 1; 
}

// Request for session profit/loss user-wise
message SessionProfitLossBetRequest {
  message User {
    string roleName = 1;
    string id = 2;
  }

  User user = 1;
  string matchId = 2;
  string betId = 3;
  bool isSession = 4;
  string searchId = 5;
  string partnerShipRoleName = 6;
}

// Response for session profit/loss
message SessionProfitLossBetResponse {
  string data = 1;
}

// Request for deleting multiple bets
message DeleteMultipleBetRequest {
  string data = 1; // Key-value pairs of URLs and data
  string deleteReason = 2;
  string matchId = 3;
  bool isPermanentDelete = 4;
}

// Response for deleting multiple bets
message DeleteMultipleBetResponse {}

// Request for changing bet delete reason
message ChangeBetsDeleteReasonRequest {
  string betIds = 1;
  string deleteReason = 2;
  string matchId = 3;
}

// Response for changing bet delete reason
message ChangeBetsDeleteReasonResponse {
  string data = 1;
}

message GetBetCountRequest {
  string parentId = 1; 
}

message GetBetCountResponse {
  string data = 1; 
}


service BetsProvider {
  rpc GetBets(GetBetsRequest) returns (GetBetsResponse);
  rpc GetSessionProfitLossUserWise(GetSessionProfitLossUserWiseRequest) returns (GetSessionProfitLossUserWiseResponse);
  rpc GetSessionProfitLossBet(SessionProfitLossBetRequest) returns (SessionProfitLossBetResponse);
  rpc DeleteMultipleBet(DeleteMultipleBetRequest) returns (DeleteMultipleBetResponse);
  rpc ChangeBetsDeleteReason(ChangeBetsDeleteReasonRequest) returns (ChangeBetsDeleteReasonResponse);
  rpc GetBetCount(GetBetCountRequest) returns (GetBetCountResponse);
}